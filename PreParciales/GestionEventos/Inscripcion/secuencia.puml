@startuml diagrama secuencia

actor "__:Organizador__" as O

create boundary "__:PantallaRegistrarAcreditacionEvento__" as PAE

O --> PAE : opcRegistrarAcreditacion()

PAE --> PAE : abrirVentana()

create control "__:GestorRegistrarAcreditacion__" as GRA

PAE --> GRA : nuevaAcreditacion()
entity "__:Organizador__" as Organizador
entity "__:sesion:Actual__" as SA 
entity "__:log:Usuario__" as LU 
GRA --> GRA : buscarUsuarioLogueado()

GRA --> SA : buscarUsuarioLogueado()

SA --> LU : getNombreUsuario()
SA --> LU : getOrganizador()
GRA --> GRA : buscarEventos()
entity "__:EstadoE__" as EE
entity "__:Evento__" as E #Red
GRA --> Organizador :buscarEventosOrganizador()
group loop [Mientras haya eventos]
    Organizador --> E : esEstadoEnCurso()
    E --> EE: esEstadoEnCurso()

    Organizador --> E : getDatos()
    E --> E : getNombre()
end

GRA --> PAE : pedirSeleccionEvento()

O --> PAE : tomarSeleccionEvento()

PAE --> GRA : tomarSeleccionEvento()

'Preguntar acerca de esta duda, de si obtengo directamente los punteros o si los busco'
GRA -->GRA : buscarInscripcionesEvento()
entity "__:selec:Evento__" as SE
GRA --> Organizador : buscarInscripcionesEvento()
entity "__:Participante__" as P #red
entity "__:Inscripcion__" as I #red
Organizador --> SE : buscarInscripcionesEvento()
group loop [Mientras haya inscripciones]
    SE --> I :  esInscripcionEvento()
    SE --> I : esNoCancelable()
    entity "__:InscripcionP__" as IP
    entity "__:EstadoI__" as EI 
    I --> EI : esNoCancelable()

    SE --> I : getDatosParticipantes()
    I --> I : buscarParticipanteInscripcion()
    group loop [Mientras haya participantes]
        I --> P : esParticipanteInscripcion()
        I --> P : getNombre()
        I --> P : getApellido()
        I --> P : getDNI()
    end
end


group loop [Mientras haya participantes]
    GRA --> PAE : pedirSeleccionParticipantes()
    O --> PAE : tomarSeleccionParticipante()
    PAE --> GRA :tomarSeleccionParticipante()
end
GRA --> PAE : pedirSeleccionConfirmacion()

O --> PAE : tomarConfirmacion()
PAE --> GRA : tomarConfirmacion()

entity "__:actual:CambioEstado__" as ACE 
entity "__:CambioEstado__" as CE #red
entity "__:Estado__" as Estado #red 
GRA --> GRA : buscarEstadoAcreditado()
group loop [Mientras haya eventos]
    GRA --> Estado : esAmbito()
    GRA --> Estado: esAcreditada()
end

GRA --> GRA : getFechaHoraActual()
GRA --> GRA : acreditarParticipantes()
GRA --> Organizador : acreditarParticipantes()
Organizador --> SE : acreditarParticipantes()
group loop [Mientras haya participantes seleccionados]
    SE --> I : buscarCambioEstadoActual()
    I --> I : buscarParticipanteInscripcion()
    I --> P : esParticipanteSeleccionado()
    I --> I : buscarEstadoActual()
    I --> CE: esActual()
    CE --> ACE : setFechaHoraActual()

    GRA --> GRA : crearCambioEstado()
    GRA --> SE : crearCambioEstado()
    SE --> I : acreditar(()

    create entity "__:nuevo:CambioEstado__" as nCE 
    I --> nCE : new()
    I--> I : setEstado()
end

GRA --> GRA : finCU()
@enduml


'Podemos relacionar el usuario con el empleado y lo que hago es obtener el empleado con getEmpleado, obteniendo el puntero

'